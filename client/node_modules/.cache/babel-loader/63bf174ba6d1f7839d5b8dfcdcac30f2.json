{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mpotter/work/shred-shred/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mpotter/work/shred-shred/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/mpotter/work/shred-shred/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mpotter/work/shred-shred/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mpotter/work/shred-shred/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mpotter/work/shred-shred/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mpotter/work/shred-shred/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mpotter/work/shred-shred/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.handleClick =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body, results, dynamicList;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/YTsearch', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  post: _this.state.post\n                })\n              });\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.text();\n\n            case 5:\n              body = _context.sent;\n              results = JSON.parse(body);\n              dynamicList = results.map(function (links) {\n                return React.createElement(\"ul\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 22\n                  },\n                  __self: this\n                }, React.createElement(\"li\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 22\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  className: \"vidTitle\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 22\n                  },\n                  __self: this\n                }, links.title), React.createElement(\"a\", {\n                  href: links.url,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 22\n                  },\n                  __self: this\n                }, React.createElement(\"img\", {\n                  className: \"ytVid\",\n                  src: links.thumbnail,\n                  alt: \"\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 22\n                  },\n                  __self: this\n                }))));\n              });\n\n              _this.setState({\n                dynamicList: dynamicList\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.state = {\n      respoonse: {},\n      post: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var list = this.state.dynamicList;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Shred.com\"), React.createElement(\"dev\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Search for Shred videos:\")), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.post,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            post: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleClick(),\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"div\", {\n        className: \"textalign\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, list));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/mpotter/work/shred-shred/client/src/App.js"],"names":["React","App","props","handleClick","fetch","method","headers","body","JSON","stringify","post","state","response","text","results","parse","dynamicList","map","links","title","url","thumbnail","setState","respoonse","list","e","target","value","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nclass App extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          respoonse: {},\n          post: '',\n      };\n  }\n\n  handleClick = async () => {\n    const response = await fetch('/api/YTsearch', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n    let results = JSON.parse(body);\n    let dynamicList = results.map((links) => <ul><li><div className=\"vidTitle\">{links.title}</div><a href={links.url}><img className=\"ytVid\" src={links.thumbnail} alt=\"\" /></a></li></ul>);\n    this.setState({ dynamicList });\n  };\n\n  render() {\n    const list = this.state.dynamicList;\n      return (\n        <div className=\"App\">\n          <h1 className=\"header\">\n            Shred.com\n          </h1>\n          <dev>\n            <p>\n              <strong>Search for Shred videos:</strong>\n            </p>\n            <input\n              type=\"text\"\n              value={this.state.post}\n              onChange={e => this.setState({ post: e.target.value })}\n            />\n            <button onClick={this.handleClick()} type=\"submit\">Submit</button>\n          </dev>\n          <div className=\"textalign\">\n          {list}\n          </div>\n        </div>\n      );\n    }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}